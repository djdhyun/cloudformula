name: Make all change plans

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, ready_for_review, closed]

jobs:
  list-stacks:
    name: List Up Changed Stacks
    uses: ./.github/workflows/gitops-list-stacks.yml

  plan:
    name: Create Change Plans
    needs: [ list-stacks ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{ fromJson(needs.list-stacks.outputs.stacks_json) }}
    env:
      STACK: ${{ matrix.value }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Check out Repository code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GithubActionSessionCTCI

      - name: Determine Plan ID
        id: cid
        run: |
          pr=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo "cid=pr$pr" >> $GITHUB_OUTPUT

      - name: CloudFormula Plans
        if: github.event.action != 'closed'
        env:
          CID: ${{ steps.cid.outputs.cid }}
        id: plan
        run: |
          make plan
          make comment 2> cmd.err > cmd.out || true

          if [ -s cmd.err ]; then
            echo "message<<EOF" >> "${GITHUB_OUTPUT}"
            cat cmd.err >> "${GITHUB_OUTPUT}"
            echo "EOF" >> "${GITHUB_OUTPUT}"
            echo "success=false" >> "${GITHUB_OUTPUT}"
            echo "command=${args}" >> "${GITHUB_OUTPUT}"
          else
            echo "message<<EOF" >> "${GITHUB_OUTPUT}"
            cat cmd.out >> "${GITHUB_OUTPUT}"
            echo "EOF" >> "${GITHUB_OUTPUT}"
            echo "success=true" >> "${GITHUB_OUTPUT}"
            echo "command=${args}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Comment on Failure
        if: steps.plan.outputs.success == 'false'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## CloudFormula Command Failed ⚠ 

            * Command: `${{ steps.plan.outputs.command }}`

            ```sh
            ${{ steps.plan.outputs.message }}
            ```

            Please check the status and resolve the issue via Cloudformation console if necessary.

      - name: Comment on Success
        if: steps.plan.outputs.success == 'true' && steps.plan.outputs.message != '' && github.event.action != 'closed'

        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## Change Plans have been created ✈️

            ${{ steps.plan.outputs.message }}

            Now, you may want to run the following commands as a next step.

            * cloudformula apply ${{ env.STACK }} ${{ env.CID }}
            * cloudformula abort ${{ env.STACK }} ${{ env.CID }}

      - name: CloudFormula Cleanup
        id: cleanup
        env:
          CID: ${{ steps.cid.outputs.cid }}
        if: github.event.action == 'closed'
        run: |
          make abort || true