name: Make all change plans

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, ready_for_review]

jobs:
  list-stacks:
    runs-on: ubuntu-latest
    outputs:
      stacks: ${{ steps.changed-stacks.outputs.stacks }}
    steps:
      - name: Check out Repository code
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: "**/*.{yaml,yml,properties}"
          files_ignore: .github/workflows/**

      - name: Get changed stacks
        id: changed-stacks
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          stacks="${{ steps.changed-files.outputs.all_changed_files }}"
          stacks=$(echo ${stacks} | tr ' ' '\n' | cut -d'/' -f1 | uniq)
          stacks=$(echo "[\"${stacks//[[:space:]]/\", \"}\"]")
          echo "stacks="$stacks"" >> $GITHUB_OUTPUT

  plan:
    needs: [ list-stacks ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{ fromJson(needs.list-stacks.outputs.stacks) }}
    env:
      stack: ${{ matrix.value }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Check out Repository code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GithubActionSessionCTCI
        if: false

      - name: Make CloudFormula Plans
        id: run
        run: |
          STACK=$stack make echo 2> cmd.err > cmd.out || echo "Failed"
          delimiter="$(openssl rand -hex 8)"

          echo "result << ${delimiter}" >> "${GITHUB_OUTPUT}"
          if [ -s cmd.err ]; then
            echo "// The following errors occurred:" >> "${GITHUB_OUTPUT}"
            cat cmd.err >> "${GITHUB_OUTPUT}"
          fi

          cat cmd.out >> "${GITHUB_OUTPUT}"

          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Comment PR
        if: steps.run.outputs.result != ''

        uses: thollander/actions-comment-pull-request@v2
        with:
          comment_tag: hih
          mode: upsert
          message: |
            [${{ env.stack }}] Changesets has been created

            ```sh
            ${{ steps.fmt.outputs.zig_fmt_errs }}
            ```

            You can run either of these

            * cloudformula apply ${{ env.stack }}
            * cloudformula abort ${{ env.stack }}
 