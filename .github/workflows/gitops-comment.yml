name: CloudFormula
on:
  issue_comment:
    types: [created]
jobs:
  apply:
    name: Run Cloudformula
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Comment Trigger
        if: github.event.issue.pull_request
        uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: 'cloudformula'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Check out Repository code
        if: steps.check.outputs.triggered == 'true'
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        if: steps.check.outputs.triggered == 'true'
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GithubActionSessionCTCI

      - name: Determine Plan ID
        if: steps.check.outputs.triggered == 'true'
        id: cid
        run: |
          pr=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          echo "cid=pr$pr" >> $GITHUB_OUTPUT

      - name: CloudFormula
        if: steps.check.outputs.triggered == 'true'
        env:
          CID: ${{ steps.cid.outputs.cid }}
        id: cloudformula
        run: |
          args=$(echo ${{ toJSON(github.event.comment.body) }} | sed 's/\r//g' | xargs)
          command=$(echo $args | cut -d' ' -f2)
          stack=$(echo $args | cut -d' ' -f3)
          STACK=${stack} make ${command} 2> cmd.err > cmd.out || true
          if [ -s cmd.err ]; then
            echo "message<<EOF" >> "${GITHUB_OUTPUT}"
            cat cmd.err >> "${GITHUB_OUTPUT}"
            echo "EOF" >> "${GITHUB_OUTPUT}"
            echo "success=false" >> "${GITHUB_OUTPUT}"
            echo "command=${args}" >> "${GITHUB_OUTPUT}"
          elif [ -s cmd.out ]; then
            echo "message<<EOF" >> "${GITHUB_OUTPUT}"
            cat cmd.out >> "${GITHUB_OUTPUT}"
            echo "EOF" >> "${GITHUB_OUTPUT}"
            echo "success=true" >> "${GITHUB_OUTPUT}"
            echo "command=${args}" >> "${GITHUB_OUTPUT}"
          else
            echo "success=true" >> "${GITHUB_OUTPUT}"
            echo "command=${args}" >> "${GITHUB_OUTPUT}"
          fi

      - name: Comment on Failure
        if: steps.check.outputs.triggered == 'true' && steps.cloudformula.outputs.success == 'false'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## CloudFormula Command Failed ⚠ 

            * Command: `${{ steps.cloudformula.outputs.command }}`

            ```sh
            ${{ steps.cloudformula.outputs.message }}
            ```

            Please check the status and resolve the issue via Cloudformation console if necessary.

      - name: Comment on Success
        if: steps.check.outputs.triggered == 'true' && steps.cloudformula.outputs.success == 'true' && steps.cloudformula.outputs.message 
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## CloudFormula Command Completed Successfully ✈

            * Command: `${{ steps.cloudformula.outputs.command }}`

            ```sh
            ${{ steps.cloudformula.outputs.message }}
            ```

      - name: Comment on Success without message
        if: steps.check.outputs.triggered == 'true' && steps.cloudformula.outputs.success == 'true' && !steps.cloudformula.outputs.message
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## CloudFormula Command Completed Successfully ✈

            * Command: `${{ steps.cloudformula.outputs.command }}`
