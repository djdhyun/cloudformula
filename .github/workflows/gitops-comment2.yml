name: CloudFormula
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, ready_for_review]
  issue_comment:
    types: [created]
jobs:
  apply:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Pending Mode
        if: github.event_name == 'pull_request'
        run: exit 1
      - name: Comment Trigger
        uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: 'cloudformula apply'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: Check out Repository code
        if: steps.check.outputs.triggered == 'true'
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        if: steps.check.outputs.triggered == 'true'
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GithubActionSessionCTCI
      - name: Determine Plan ID
        if: steps.check.outputs.triggered == 'true'
        id: cid
        run: |
          pr=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          echo "cid=pr$pr" >> $GITHUB_OUTPUT
      - name: CloudFormula Apply
        if: steps.check.outputs.triggered == 'true'
        env:
          CID: ${{ steps.cid.outputs.cid }}
        id: apply
        run: |
          args=$(echo ${{ toJSON(github.event.comment.body) }} | sed 's/\r//g' | xargs)
          command=$(echo $args | cut -d' ' -f2)
          stack=$(echo $args | cut -d' ' -f3)
          STACK=${stack} make ${command} 2> cmd.err > cmd.out || true
          if [ -s cmd.err ]; then
            echo "message<<EOF" >> "${GITHUB_OUTPUT}"
            cat cmd.err >> "${GITHUB_OUTPUT}"
            echo "EOF" >> "${GITHUB_OUTPUT}"
            echo "success=false" >> "${GITHUB_OUTPUT}"
          else
            echo "message<<EOF" >> "${GITHUB_OUTPUT}"
            cat cmd.out >> "${GITHUB_OUTPUT}"
            echo "EOF" >> "${GITHUB_OUTPUT}"
            echo "success=true" >> "${GITHUB_OUTPUT}"
          fi
      - name: Comment on Failure
        if: steps.check.outputs.triggered == 'true' && steps.apply.outputs.success == 'false'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## Change Plans have been failed to be applied ‚ö†Ô∏è
            ```sh
            ${{ steps.apply.outputs.message }}
            ```
            Please check the status and resolve the issue via Cloudformation console.
      - name: Comment on Success
        if: steps.check.outputs.triggered == 'true' && steps.apply.outputs.success == 'true'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## Change Plans have been applied successfully üöÄ
            ```sh
            ${{ steps.apply.outputs.message }}
            ```
            Now, you are good to merge the pull request!